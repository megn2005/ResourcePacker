// 这段 MFC 示例源代码演示如何使用 MFC Microsoft Office Fluent 用户界面 
// (“Fluent UI”)。该示例仅供参考，
// 用以补充《Microsoft 基础类参考》和 
// MFC C++ 库软件随附的相关电子文档。
// 复制、使用或分发 Fluent UI 的许可条款是单独提供的。
// 若要了解有关 Fluent UI 许可计划的详细信息，请访问  
// http://msdn.microsoft.com/officeui。
//
// 版权所有(C) Microsoft Corporation
// 保留所有权利。

// ResourcePacker.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "ResourcePacker.h"
#include "MainFrm.h"

#include "ResourcePackerDoc.h"
#include "ResourcePackerView.h"

#include "DBOper.h"


#ifdef _DEBUG
#define new DEBUG_NEW
#endif


///////////////////////////////////////////////////////////////////////////////
// 用于应用程序“关于”菜单项的 CAboutDlg 对话框
///////////////////////////////////////////////////////////////////////////////

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

protected:
	// DDX/DDV 支持
	virtual void DoDataExchange(CDataExchange* pDX);    

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};


///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////

// 构造函数
CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

// 析构函数
void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}


///////////////////////////////////////////////////////////////////////////////
// CAboutDlg 消息处理程序
///////////////////////////////////////////////////////////////////////////////

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()






///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////







// 唯一的一个 CResourcePackerApp 对象
CResourcePackerApp theApp;

///////////////////////////////////////////////////////////////////////////////
// CResourcePackerApp
///////////////////////////////////////////////////////////////////////////////

// CResourcePackerApp 构造
CResourcePackerApp::CResourcePackerApp()
{
	m_bHiColorIcons = TRUE;

	// TODO: 将以下应用程序 ID 字符串替换为唯一的 ID 字符串；建议的字符串格式
	//为 CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID(_T("ResourcePacker.AppID.NoVersion"));

	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
	
	// 不保存窗口状态
	m_bSaveState = FALSE;
}

// CResourcePackerApp 初始化
BOOL CResourcePackerApp::InitInstance()
{
	CWinAppEx::InitInstance();

	// 初始化 OLE 库
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	// 初始化数据库
	if (!CDBOper::Initialize())
	{
		AfxMessageBox(IDS_SQLITE_INIT_FAILED);
		return FALSE;
	}

	//
	EnableTaskbarInteraction(FALSE);

	// 使用 RichEdit 控件需要  AfxInitRichEdit2()	
	// AfxInitRichEdit2();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("ResourcePacker"));
	LoadStdProfileSettings(0);  // 加载标准 INI 文件选项(包括 MRU)

	InitContextMenuManager();
	InitShellManager();
	InitKeyboardManager();

	InitTooltipManager();
	CMFCToolTipInfo ttParams;
	ttParams.m_bVislManagerTheme = TRUE;
	theApp.GetTooltipManager()->SetTooltipParams(AFX_TOOLTIP_TYPE_ALL,
		RUNTIME_CLASS(CMFCToolTipCtrl), &ttParams);


	// 注册应用程序的文档模板。文档模板
	// 将用作文档、框架窗口和视图之间的连接
	CSingleDocTemplate* pDocTemplate;
	pDocTemplate = new CSingleDocTemplate(
		IDR_MAINFRAME,
		RUNTIME_CLASS(CResourcePackerDoc),
		RUNTIME_CLASS(CMainFrame),       // 主 SDI 框架窗口
		RUNTIME_CLASS(CResourcePackerView));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);


	// 分析标准 shell 命令、DDE、打开文件操作的命令行
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);

	// 调度在命令行中指定的命令。如果
	// 用 /RegServer、/Register、/Unregserver 或 /Unregister 启动应用程序，则返回 FALSE。
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;


	// 唯一的一个窗口已初始化，因此显示它并对其进行更新
	m_pMainWnd->ShowWindow(SW_SHOW);
	m_pMainWnd->UpdateWindow();
	// 仅当具有后缀时才调用 DragAcceptFiles
	//  在 SDI 应用程序中，这应在 ProcessShellCommand 之后发生

	return TRUE;
}

// 退出
int CResourcePackerApp::ExitInstance()
{
	//TODO: 处理可能已添加的附加资源

	// 释放数据库
	CDBOper::Finalize();

	//
	AfxOleTerm(FALSE);

	// 清理窗口状态
	//CleanState();

	return CWinAppEx::ExitInstance();
}


///////////////////////////////////////////////////////////////////////////////
// CResourcePackerApp 消息处理程序
///////////////////////////////////////////////////////////////////////////////

BEGIN_MESSAGE_MAP(CResourcePackerApp, CWinAppEx)
	ON_COMMAND(ID_APP_ABOUT, &CResourcePackerApp::OnAppAbout)
END_MESSAGE_MAP()


// 用于运行对话框的应用程序命令
void CResourcePackerApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

// CResourcePackerApp 自定义加载/保存方法
void CResourcePackerApp::PreLoadState()
{
	BOOL bNameValid;
	CString strName;

	//
	bNameValid = strName.LoadString(IDS_EDIT_MENU);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_EDIT);
	
	// 文件夹树菜单
	bNameValid = strName.LoadString(IDS_FOLDER_TREE_MENU);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_FOLDER_TREE);

	// 文件列表菜单
	bNameValid = strName.LoadString(IDS_FILE_LIST_MENU);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_FILE_LIST);
}

//
void CResourcePackerApp::LoadCustomState()
{
}

//
void CResourcePackerApp::SaveCustomState()
{
}



